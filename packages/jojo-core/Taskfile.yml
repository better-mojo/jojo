version: "3"

vars:
  MAX_CHANNEL: "https://conda.modular.com/max"

tasks:
  fmt:
    cmds:
      - magic run mojo format -l 120 .

  pkg:
    aliases: [ 'pm', 'magic' ]
    cmds:
      - magic {{.CLI_ARGS}}

  dev:
    aliases: [ 'd', ]
    cmds:
      - magic run mojo src/run.mojo

  run:example:
    aliases: [ 'r', ]
    cmds:
      - magic run mojo examples/run_mojopkg.mojo

  test:
    aliases: [ 't', ]
    cmds:
      - magic run mojo test -I src/ test/

  venv:
    cmds:
      - magic shell
      - mojo --version
    ignore_error: true

  install:
    aliases: [ "i" ]
    cmds:
      - curl -fsSL https://pixi.sh/install.sh | bash

  init:test:
    aliases: [ "it" ]
    cmds:
      - magic task add test "pytest" --feature test
      - magic project environment add default --solve-group default
      - magic project environment add test --feature test --solve-group default
      - magic add pytest --pypi --feature test

  init:dev:
    aliases: [ "id" ]
    cmds:
      - magic task add dev "" --feature dev
      - magic project environment add default --solve-group default
      - magic project environment add dev --feature dev --solve-group default
      - magic add pytest --pypi --feature dev

  add:dev:
    aliases: [ "ad" ]
    cmds:
      - magic add rattler-build --feature dev
      - pixi global install rattler-build

  # 打包成 .mojopkg
  package:
    aliases: [ "pack" ]
    cmds:
      - mkdir -p build/
      - magic run package

  # 打包 .conda, 待发布
  build:
    aliases: [ "b" ]
    cmds:
      - mkdir -p build/
      - magic run build
      - open output/
    ignore_error: true

  build:clean:
    aliases: [ "bc" ]
    cmds:
      - rm -rf output/
      - mkdir -p build/
      - magic run build
    ignore_error: true

  #
  # ref: https://taskfile.dev/usage/#looping-over-variables
  #
  publish:
    aliases: [ "up", "pub", "pub:auto" ]
    vars:
      UP_PKGS:
        sh: find . -name "*.conda" -type f
    cmds:
      - echo {{ .UP_PKGS }}
      - for: { var: UP_PKGS }
        cmd:
          |
          magic run rattler-build upload prefix -c "jojo" \
            --api-key=$PREFIX_DEV_API_KEY \
            {{.ITEM}}

  publish:manual:
    aliases: [ "pub:m", "up:m" ]
    cmds:
      - echo $PREFIX_DEV_API_KEY
      - |
        magic run rattler-build upload prefix -c "jojo" \
          --api-key=$PREFIX_DEV_API_KEY \
          output/osx-arm64/jojo-core-0.1.1-h60d57d3_0.conda
      - open https://prefix.dev/channels/jojo
    ignore_error: true

  release:
    aliases: [ "rel" ]
    cmds:
      - task: build
      - task: publish
